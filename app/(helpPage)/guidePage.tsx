import ReturnButton from "@/components/returnButton";
import FontAwesome from "@expo/vector-icons/FontAwesome";
import { LinearGradient } from "expo-linear-gradient";
import React from "react";
import {
  Dimensions,
  ScrollView,
  StyleSheet,
  Text,
  View
} from "react-native";

const { height, width } = Dimensions.get("window");
const GlobalGap = width * 0.05;

// ‰ΩøÁî®ÊåáÂçóÊï∞ÊçÆ
const guideData = [
  {
    section: "Âø´ÈÄüÂÖ•Èó®",
    steps: [
      {
        step: "Ê≠•È™§ 1",
        title: "Ê≥®ÂÜå/ÁôªÂΩïË¥¶Âè∑",
        description: "Â¶ÇÊûúÊÇ®ÊòØÊñ∞Áî®Êà∑ÔºåËØ∑ÂÖàÊ≥®ÂÜåË¥¶Âè∑„ÄÇÂ¶ÇÊûúÊÇ®Â∑≤ÊúâË¥¶Âè∑ÔºåÁõ¥Êé•ÁôªÂΩïÂç≥ÂèØ„ÄÇ",
        tips: "È¶ñÊ¨°ÁôªÂΩïÂª∫ËÆÆÂÆåÂñÑ‰∏™‰∫∫‰ø°ÊÅØÔºåËé∑ÂæóÊõ¥Â•ΩÁöÑ‰ΩøÁî®‰ΩìÈ™å„ÄÇ"
      },
      {
        step: "Ê≠•È™§ 2",
        title: "‰∫ÜËß£‰∏ªÁïåÈù¢",
        description: "‰∏ªÁïåÈù¢ÂåÖÂê´ÂøÉÊÉÖËÆ∞ÂΩï„ÄÅAIÈóÆÁ≠î„ÄÅÊ∂àÊÅØÈÄöÁü•„ÄÅÁ¥ßÊÄ•ËÅîÁ≥ªÁ≠â‰∏ªË¶ÅÂäüËÉΩÂÖ•Âè£„ÄÇ",
        tips: "ÂäüËÉΩÂç°ÁâáÈááÁî®‰∏çÂêåÈ¢úËâ≤Âå∫ÂàÜÔºå‰æø‰∫éÂø´ÈÄüËØÜÂà´„ÄÇ"
      },
      {
        step: "Ê≠•È™§ 3",
        title: "ËÆ∞ÂΩïÂøÉÊÉÖ",
        description: "ÊØèÂ§©ÊäΩÊó∂Èó¥ËÆ∞ÂΩïÂΩìÂâçÂøÉÊÉÖÔºåÂ∏ÆÂä©ÊÇ®Êõ¥Â•ΩÂú∞‰∫ÜËß£Ëá™Â∑±ÁöÑÊÉÖÁª™ÂèòÂåñ„ÄÇ",
        tips: "ÂøÉÊÉÖËÆ∞ÂΩï‰ªÖ‰øùÂ≠òÂú®Êú¨Âú∞Ôºå‰øùÊä§ÊÇ®ÁöÑÈöêÁßÅÂÆâÂÖ®„ÄÇ"
      }
    ]
  },
  {
    section: "Ê†∏ÂøÉÂäüËÉΩ‰ΩøÁî®",
    steps: [
      {
        step: "AIÈóÆÁ≠î",
        title: "Êô∫ËÉΩÂä©Êâã",
        description: "ÁÇπÂáª\"ÊúâÈóÆÈ¢òÔºåÈóÆAI\"Âç°ÁâáÔºåÂèØ‰ª•‰∏éAIÂä©ÊâãËøõË°åÂØπËØùÔºåËé∑ÂèñÂª∫ËÆÆÂíåÊîØÊåÅ„ÄÇ",
        tips: "AIÂä©ÊâãÂèØ‰ª•ÂõûÁ≠îÂêÑÁßçÈóÆÈ¢òÔºåÂåÖÊã¨ÁîüÊ¥ª„ÄÅÂ≠¶‰π†„ÄÅÂ∑•‰ΩúÁ≠âÊñπÈù¢„ÄÇ"
      },
      {
        step: "ÂÆöÊó∂ËÆæÁΩÆ",
        title: "ÊèêÈÜíÂäüËÉΩ",
        description: "ÁÇπÂáª\"ÂÆöÊó∂ËÆæÁΩÆ\"ÂèØ‰ª•ËÆæÁΩÆÂÆöÊó∂ÊèêÈÜíÔºå‰∏ç‰ºöÈîôËøáÈáçË¶ÅÁöÑ‰∫ãÊÉÖ„ÄÇ",
        tips: "ÂèØ‰ª•ËÆæÁΩÆÂ§ö‰∏™ÂÆöÊó∂‰ªªÂä°ÔºåÁ≥ªÁªü‰ºöÂáÜÊó∂ÂèëÈÄÅÈÄöÁü•ÊèêÈÜí„ÄÇ"
      },
      {
        step: "‰∏ÄÈîÆÂëºÂá∫",
        title: "Á¥ßÊÄ•ËÅîÁ≥ª",
        description: "Âú®Á¥ßÊÄ•ÊÉÖÂÜµ‰∏ãÔºåÁÇπÂáª\"‰∏ÄÈîÆÂëºÂá∫\"ÂèØ‰ª•Âø´ÈÄüËÅîÁ≥ªÁ¥ßÊÄ•ËÅîÁ≥ª‰∫∫„ÄÇ",
        tips: "ËØ∑ÊèêÂâçÂú®‰∏™‰∫∫ËµÑÊñô‰∏≠ËÆæÁΩÆÂ•ΩÁ¥ßÊÄ•ËÅîÁ≥ª‰∫∫ÁîµËØùÂè∑Á†Å„ÄÇ"
      }
    ]
  },
  {
    section: "‰∏™‰∫∫‰∏≠ÂøÉ",
    steps: [
      {
        step: "‰∏™‰∫∫‰ø°ÊÅØ",
        title: "ËµÑÊñôÁÆ°ÁêÜ",
        description: "ÁÇπÂáªÂ§¥ÂÉèËøõÂÖ•‰∏™‰∫∫ËµÑÊñôÈ°µÈù¢ÔºåÂèØ‰ª•‰øÆÊîπÂßìÂêç„ÄÅÊÄßÂà´„ÄÅÁîüÊó•„ÄÅÂú∞ÂùÄÁ≠â‰ø°ÊÅØ„ÄÇ",
        tips: "ÂÆåÊï¥ÁöÑ‰∏™‰∫∫‰ø°ÊÅØÊúâÂä©‰∫éÁ≥ªÁªüÊõ¥Â•ΩÂú∞‰∏∫ÊÇ®Êèê‰æõÊúçÂä°„ÄÇ"
      },
      {
        step: "Ê∂àÊÅØ‰∏≠ÂøÉ",
        title: "Ê∂àÊÅØÁÆ°ÁêÜ",
        description: "ÁÇπÂáª\"Ê∂àÊÅØÈÄöÁü•\"Êü•ÁúãÁ≥ªÁªüÊ∂àÊÅØÂíåÈÄöÁü•ÔºåÂèäÊó∂‰∫ÜËß£ÈáçË¶Å‰ø°ÊÅØ„ÄÇ",
        tips: "Êú™ËØªÊ∂àÊÅØ‰ºöÊòæÁ§∫Á∫¢Ëâ≤Êï∞Â≠óÊ†áËÆ∞ÔºåËÆ∞ÂæóÂèäÊó∂Êü•Áúã„ÄÇ"
      },
      {
        step: "Â∏ÆÂä©‰∏≠ÂøÉ",
        title: "Ëé∑ÂèñÂ∏ÆÂä©",
        description: "ÁÇπÂáª\"ÊúâÈóÆÈ¢òÁÇπËøôÈáå\"ËøõÂÖ•Â∏ÆÂä©‰∏≠ÂøÉÔºåÊü•ÁúãÂ∏∏ËßÅÈóÆÈ¢òÂíå‰ΩøÁî®ÊåáÂçó„ÄÇ",
        tips: "Â¶ÇÊûúÈÅáÂà∞ÈóÆÈ¢òÔºåÂèØ‰ª•ÂÖàÂú®Â∏ÆÂä©‰∏≠ÂøÉÂØªÊâæËß£ÂÜ≥ÊñπÊ°à„ÄÇ"
      }
    ]
  },
  {
    section: "ËøõÈò∂ÊäÄÂ∑ß",
    steps: [
      {
        step: "‰∏™ÊÄßÂåñËÆæÁΩÆ",
        title: "ÂÆöÂà∂‰ΩìÈ™å",
        description: "Ê†πÊçÆ‰∏™‰∫∫ÂñúÂ•ΩËÆæÁΩÆÂøÉÊÉÖËÆ∞ÂΩïÈ¢ëÁéá„ÄÅÊèêÈÜíÊñπÂºèÁ≠âÔºåÊâìÈÄ†‰∏ìÂ±ûÁöÑ‰ΩøÁî®‰ΩìÈ™å„ÄÇ",
        tips: "ÂÆöÊúüÊ£ÄÊü•Âπ∂Êõ¥Êñ∞ËÆæÁΩÆÔºåÁ°Æ‰øùÁ¨¶ÂêàÂΩìÂâçÈúÄÊ±Ç„ÄÇ"
      },
      {
        step: "Êï∞ÊçÆÁÆ°ÁêÜ",
        title: "‰ø°ÊÅØÁª¥Êä§",
        description: "ÂÆöÊúüÂ§á‰ªΩÈáçË¶ÅÊï∞ÊçÆÔºåÊ∏ÖÁêÜÊó†Áî®‰ø°ÊÅØÔºå‰øùÊåÅÂ∫îÁî®ËøêË°åÊµÅÁïÖ„ÄÇ",
        tips: "Âª∫ËÆÆÊØèÊúàÊ£ÄÊü•‰∏ÄÊ¨°‰∏™‰∫∫‰ø°ÊÅØÂíåÊï∞ÊçÆÁä∂ÊÄÅ„ÄÇ"
      },
      {
        step: "ÂÆâÂÖ®Âª∫ËÆÆ",
        title: "Ë¥¶Êà∑ÂÆâÂÖ®",
        description: "ÂÆöÊúüÊõ¥Êç¢ÂØÜÁ†ÅÔºå‰∏çË¶ÅÂú®ÂÖ¨ÂÖ±ËÆæÂ§á‰∏ä‰øùÂ≠òÁôªÂΩï‰ø°ÊÅØÔºå‰øùÊä§Ë¥¶Êà∑ÂÆâÂÖ®„ÄÇ",
        tips: "Â¶ÇÊûúÂèëÁé∞ÂºÇÂ∏∏ÊÉÖÂÜµÔºåËØ∑Á´ãÂç≥ËÅîÁ≥ªÂÆ¢ÊúçÊàñ‰øÆÊîπÂØÜÁ†Å„ÄÇ"
      }
    ]
  }
];

// ÊåáÂçóÈ°πÁõÆÁªÑ‰ª∂
const GuideItem = ({ step, title, description, tips }: {
  step: string;
  title: string;
  description: string;
  tips: string;
}) => {
  return (
    <View style={styles.guideItem}>
      <View style={styles.stepHeader}>
        <Text style={styles.stepText}>{step}</Text>
        <Text style={styles.stepTitle}>{title}</Text>
      </View>
      <View style={styles.stepContent}>
        <Text style={styles.stepDescription}>{description}</Text>
        <View style={styles.tipsContainer}>
          <Text style={styles.tipsLabel}>üí° Â∞èË¥¥Â£´Ôºö</Text>
          <Text style={styles.tipsText}>{tips}</Text>
        </View>
      </View>
    </View>
  );
};

// ÊåáÂçóÂàÜÁ±ªÁªÑ‰ª∂
const GuideSection = ({ section, steps }: {
  section: string;
  steps: typeof guideData[0]["steps"];
}) => {
  return (
    <View style={styles.guideSection}>
      <Text style={styles.sectionTitle}>{section}</Text>
      <View style={styles.sectionContainer}>
        {steps.map((item, index) => (
          <GuideItem
            key={`${section}-${index}`}
            step={item.step}
            title={item.title}
            description={item.description}
            tips={item.tips}
          />
        ))}
      </View>
    </View>
  );
};

export default function GuidePage() {
  return (
    <LinearGradient
      colors={["#FFFFFF", "#FFFFFF", "#FFFFFF"]}
      locations={[0.1, 0.4, 0.7]}
      start={{ x: 0, y: 0 }}
      end={{ x: 1, y: 1 }}
      style={{
        flex: 1,
      }}
    >
      <View style={styles.container}>
        {/* È°µÈù¢Ê†áÈ¢òÂå∫Âüü */}
        <View style={styles.headerSection}>
          <FontAwesome name="book" size={width * 0.08} color="#4CAF50" />
          <Text style={styles.mainTitle}>‰ΩøÁî®ÊåáÂçó</Text>
        </View>

        {/* ÊåáÂçóÂÜÖÂÆπÂå∫Âüü */}
        <ScrollView style={styles.contentSection} showsVerticalScrollIndicator={false}>
          {guideData.map((category, index) => (
            <GuideSection
              key={index}
              section={category.section}
              steps={category.steps}
            />
          ))}
        </ScrollView>

        {/* Â∫ïÈÉ®ËøîÂõûÊåâÈíÆÂå∫Âüü */}
        <View style={styles.bottomReturn}>
          <ReturnButton />
        </View>
      </View>
    </LinearGradient>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    height: height,
    width: width,
    alignItems: "center",
  },
  headerSection: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    width: width,
    paddingHorizontal: GlobalGap,
    paddingTop: height * 0.05,
    paddingBottom: height * 0.03,
    backgroundColor: "#E8F5E8",
    gap: width * 0.03,
  },
  mainTitle: {
    fontSize: width * 0.06,
    fontWeight: "bold",
    color: "#333",
    textAlign: "center",
  },
  contentSection: {
    flex: 1,
    width: width * 0.9,
    paddingHorizontal: GlobalGap,
    paddingVertical: height * 0.02,
  },
  guideSection: {
    marginBottom: height * 0.02,
  },
  sectionTitle: {
    fontSize: width * 0.05,
    fontWeight: "bold",
    color: "#333",
    marginBottom: height * 0.01,
    paddingHorizontal: width * 0.02,
    paddingVertical: height * 0.01,
    backgroundColor: "#4CAF50",
    borderRadius: width * 0.03,
    textAlign: "center",
  },
  sectionContainer: {
    backgroundColor: "#E8F5E8",
    borderRadius: width * 0.05,
    overflow: "hidden",
  },
  guideItem: {
    borderBottomWidth: 1,
    borderBottomColor: "rgba(0, 0, 0, 0.1)",
  },
  stepHeader: {
    flexDirection: "row",
    alignItems: "center",
    paddingHorizontal: width * 0.04,
    paddingVertical: height * 0.02,
    backgroundColor: "rgba(255, 255, 255, 0.8)",
    gap: width * 0.03,
  },
  stepText: {
    fontSize: width * 0.035,
    fontWeight: "bold",
    color: "#4CAF50",
    backgroundColor: "white",
    paddingHorizontal: width * 0.02,
    paddingVertical: height * 0.005,
    borderRadius: width * 0.02,
    borderWidth: 1,
    borderColor: "#4CAF50",
  },
  stepTitle: {
    fontSize: width * 0.04,
    fontWeight: "bold",
    color: "#333",
    flex: 1,
  },
  stepContent: {
    paddingHorizontal: width * 0.04,
    paddingBottom: height * 0.02,
    backgroundColor: "rgba(255, 255, 255, 0.6)",
  },
  stepDescription: {
    fontSize: width * 0.035,
    color: "#333",
    lineHeight: height * 0.05,
    marginBottom: height * 0.01,
  },
  tipsContainer: {
    flexDirection: "row",
    alignItems: "flex-start",
    backgroundColor: "rgba(76, 175, 80, 0.1)",
    padding: width * 0.02,
    borderRadius: width * 0.02,
  },
  tipsLabel: {
    fontSize: width * 0.03,
    color: "#4CAF50",
    fontWeight: "bold",
  },
  tipsText: {
    fontSize: width * 0.03,
    color: "#555",
    flex: 1,
    lineHeight: height * 0.04,
  },
  bottomReturn: {
    position: "absolute",
    bottom: height * 0.05,
    left: width * 0.05,
    zIndex: 10,
  },
});